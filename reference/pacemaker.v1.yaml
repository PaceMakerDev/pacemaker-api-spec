openapi: 3.0.0
info:
  title: pacemaker.v1
  version: '1.0'
  contact:
    name: puroong
    email: skfk0135@gmail.com
  license:
    name: MIT
  description: 페이스메이커 API v1
servers:
  - url: 'http://localhost:3000'
tags:
  - name: 스터디
  - name: 인증
  - name: 공부 기록
  - name: 질문
  - name: 사용자
  - name: 파일
paths:
  /v1/auth/signup:
    post:
      summary: 회원가입
      operationId: post-v1-auth-signup
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/LoginResponse'
        '400':
          description: request body 잘못됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '409':
          description: 이메일 중복됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      tags:
        - 인증
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
        description: ''
      description: 로그인 할 때 사용
  /v1/auth/signin:
    post:
      summary: 로그인
      operationId: post-v1-auth-signin
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/LoginResponse'
        '400':
          description: request body 잘못됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 아이디 또는 비밀번호 잘못됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
        description: 회원가입 할 때 사용
      tags:
        - 인증
      description: 로그인 할 때 사용합니다
  /v1/studies:
    get:
      summary: 스터디 목록 조회
      tags:
        - 스터디
      responses:
        '200':
          description: 조회 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StudyOverview'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-studies
      parameters:
        - schema:
            type: string
            enum:
              - LANGUAGE
              - IT
              - NATIONAL_EXAM
              - CERTIFICATE
              - ENTRANCE_EXAM
              - EMPLOYMENT
              - OTHER
          in: query
          name: category
          description: |-
            태그

            LANGUAGE 외국어

            IT IT/컴퓨터

            NATIONAL_EXAM 고시/공무원

            CERTIFICATE 자격증

            ENTRANCE_EXAM 입시

            EMPLOYMENT 취업

            OTHER 기타
        - schema:
            type: integer
          in: query
          name: page
          description: 페이지 번호
        - schema:
            type: integer
          in: query
          name: size
          description: 불러올 스터디 개수
        - schema:
            type: string
          in: query
          name: search
          description: '제목, 해시태그로 검색합니다'
      security:
        - Authorization: []
      description: ' 스터디룸 찾기 페이지에서 사용'
    post:
      summary: 스터디 생성
      operationId: post-v1-studies
      responses:
        '201':
          description: 스터디 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/StudyOverview'
        '401':
          description: 액서스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 스터디 검색에서 스터디 목록 조회할 때 사용합니다
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudyRequest'
      tags:
        - 스터디
  /v1/studies/recent:
    get:
      summary: 최근 스터디 목록 조회
      tags:
        - 스터디
      responses:
        '200':
          description: |-
            조회 성공한 경우

            최근 스터디 6개를 조회합니다
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StudyOverview'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-recent-studies
      parameters: []
      security:
        - Authorization: []
      description: |-
        스터디룸 찾기 페이지에서
         
         `따끈따끈 신상 스터디룸` 목록
  /v1/studies/recommend:
    get:
      summary: 추천 스터디 목록 조회
      tags:
        - 스터디
      responses:
        '200':
          description: 조회 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StudyOverview'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-recommend-studies
      security:
        - Authorization: []
      description: |-
        스터디룸 찾기 페이지에서

        `이 스터디룸은 어때요?` 목록
  '/v1/studies/{studyId}/questions':
    parameters:
      - schema:
          type: integer
        name: studyId
        in: path
        required: true
        description: 스터디 id
    get:
      summary: 질문 목록 조회
      tags:
        - 질문
      responses:
        '200':
          description: 조회 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/QuestionOverview'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-studies-studyId-questions
      description: 스터디룸 질문 게시판 페이지에서 사용
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: searchByTitleOrContent
          description: 제목 또는 내용으로 검색
    post:
      summary: 질문 작성
      operationId: post-v1-studies-studyId-questions
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/QuestionOverview'
        '400':
          description: request body가 잘못된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 스터디룸에서 질문 작성할 때 사용
      tags:
        - 질문
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionRequest'
  /v1/auth/token/refresh:
    post:
      summary: 토큰 재발급
      operationId: post-v1-auth-token-refresh
      responses:
        '200':
          description: 토큰 재발급 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/AccessToken'
        '400':
          description: request body 잘못됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '401':
          description: 리프레시 토큰 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 마지막에 로그인했을 때 발급받은 리프레시 토큰이 아닌 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      tags:
        - 인증
      description: |-
        액세스 토큰 만료된 경우 재발급할 때 사용

        반드시 마지막으로 로그인했을 때 받은 리프레시 토큰을 전달해야 합니다

        이전에 발급받았던걸 전달하면 403 에러가 뜹니다
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateTokenRequest'
  '/v1/users/{userId}/studies':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id
    get:
      summary: 사용자가 참여하고 있는 스터디 룸 목록 조회
      tags:
        - 스터디
      responses:
        '200':
          description: 스터디 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserStudyOverview'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 조회할 수 있는 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-users-userId-studies
      description: 메인 페이지에서 나의 스터디룸 목록을 조회할 때 사용합니다
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
            default: 0
          in: query
          name: page
          description: 페이지 번호
        - schema:
            type: integer
            default: 6
          in: query
          name: size
          description: 불러올 스터디 개수
        - schema:
            type: string
            enum:
              - CREATED_AT
          in: query
          name: sortBy
          description: 정렬 기준
  '/v1/users/{userId}/study-logs/daily':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id
    get:
      summary: 일일 공부 기록
      tags:
        - 공부 기록
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BarGraphData'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 조회할 수 있는 권한이 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-users-userId-study-logs-daily
      description: 메인 페이지에서 일일 오늘의 공부 기록 조회할 때 사용합니다
      security:
        - Authorization: []
  '/v1/users/{userId}/study-logs/weekly':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id
    get:
      summary: 주 공부 기록
      tags:
        - 공부 기록
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BarGraphData'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 조회할 수 있는 권한이 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-users-userId-study-logs-weekly
      description: 메인 페이지에서 weekly 오늘의 공부 기록 조회할 때 사용합니다
      security:
        - Authorization: []
  '/v1/users/{userId}/study-logs/monthly':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id
    get:
      summary: 월 공부 기록
      tags:
        - 공부 기록
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BarGraphData'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 조회할 수 있는 권한이 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-users-userId-study-logs-monthly
      description: 메인 페이지에서 monthly 오늘의 공부 기록 조회할 때 사용합니다
      security:
        - Authorization: []
  /v1/auth/email/find:
    post:
      summary: 이메일 찾기
      operationId: post-v1-auth-email-find
      responses:
        '200':
          description: 이메일 찾기 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/UserEmail'
        '400':
          description: request body 잘못된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 해당 정보를 가진 사용자가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      tags:
        - 인증
      description: 아이디 찾기 페이지에서 사용합니다
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindEmailRequest'
  /v1/auth/password/find:
    post:
      summary: 비밀번호 찾기
      operationId: post-v1-auth-password-find
      responses:
        '200':
          description: 이메일 전송 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/UserEmailAndName'
        '400':
          description: request body 잘못된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 해당 정보를 가진 사용자가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '500':
          description: 서버 오류로 이메일 못보낸 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      tags:
        - 인증
      description: 비밀번호 찾기 페이지에서 사용합니다
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindPasswordRequest'
  '/v1/user/{userId}/password/reset':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    patch:
      summary: 비밀번호 초기화
      operationId: patch-v1-user-userId-password
      responses:
        '204':
          description: 비밀번호 변경 성공한 경우
        '400':
          description: request body가 잘못된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 다른 사용자의 비밀번호를 바꾸려 하거나 입력한 기존 비밀번호가 틀린 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 없는 사용자 id인 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 비밀번호 변경
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      tags:
        - 사용자
  '/v1/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: 사용자 정보 조회
      tags:
        - 사용자
      responses:
        '200':
          description: 조회 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: 액세스 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 정보 조회 권한이 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 사용자가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      operationId: get-v1-users-userId
      description: 사용자 정보 조회할 때 사용합니다
      security:
        - Authorization: []
    put:
      summary: 사용자 정보 수정
      operationId: put-v1-users-userId
      responses:
        '200':
          description: 정보 수정 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/User'
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: request body 형식이 틀린 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 권한이 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 사용자가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 사용자 정보 수정
      tags:
        - 사용자
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      security:
        - Authorization: []
  '/v1/studies/{studyId}/participate-requests':
    parameters:
      - schema:
          type: string
        name: studyId
        in: path
        required: true
    post:
      summary: 스터디 참여 신청하기
      operationId: post-v1-studies-studyId-requests
      responses:
        '201':
          description: 참여신청 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/StudyParticipateRequest'
        '401':
          description: 액세스 토큰에 문제가 있는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '409':
          description: 이미 참여하고 있는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 스터디 참여신청하기
      security:
        - Authorization: []
      tags:
        - 스터디
    get:
      summary: 스터디 참여 신청 목록 조회
      operationId: get-v1-studies-studyId-participate-requests
      responses:
        '200':
          description: 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StudyParticipateRequest'
        '401':
          description: 액세스 토큰에 문제가 있는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 팀장이 아닌 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      tags:
        - 스터디
      description: 스터디 참여 신청 목록 조회
  /v1/auth/email/send-code:
    post:
      summary: 이메일 코드 전송
      operationId: post-v1-auth-email-send-code
      responses:
        '204':
          description: 전송 성공한 경우
      description: 이메일 코드 전송
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailCodeRequest'
      tags:
        - 인증
  /v1/auth/email/verify-code:
    post:
      summary: 이메일 코드 인증하기
      operationId: post-v1-auth-email-verify
      responses:
        '204':
          description: 성공한 경우
        '404':
          description: 없는 코드인 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 이메일 코드 인증하기
      tags:
        - 인증
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailCodeRequest'
    parameters: []
  /v1/participate-requests/accept:
    post:
      summary: 스터디 참여 수락하기
      operationId: post-v1-participate-requests-accept
      responses:
        '204':
          description: 성공한 경우
        '401':
          description: 액세스 토큰에 문제가 있는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 팀장이 아닌 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 해당 참여 요청이 없을 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 스터디 참여 수락하기
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdAndStudyId'
        description: ''
      tags:
        - 스터디
  /v1/participate-requests/reject:
    post:
      summary: 스터디 참여 거부하기
      operationId: post-v1-participate-requests-reject
      responses:
        '204':
          description: 성공한 경우
        '401':
          description: 액세스 토큰에 문제가 있는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '403':
          description: 팀장이 아닌 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '404':
          description: 해당 참여 요청이 없을 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 스터디 참여 수락하기
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdAndStudyId'
      tags:
        - 스터디
  /v1/files:
    post:
      summary: 파일 업로드
      operationId: post-v1-files
      responses:
        '201':
          description: 파일 업로드 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    $ref: '#/components/schemas/File'
        '400':
          description: request body에 문제가 있는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
        '401':
          description: 액세스 토큰에 문제가 있는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: api 호출 성공 여부
                  data:
                    type: string
      description: 파일 업로드 할 때 사용합니다
      tags:
        - 파일
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
components:
  schemas:
    SignInRequest:
      title: SignInRequest
      type: object
      properties:
        email:
          type: string
          description: 이메일
          format: email
        password:
          type: string
          description: 비밀번호
      required:
        - email
        - password
    SignUpRequest:
      title: SignUpRequest
      type: object
      properties:
        email:
          type: string
          description: 이메일
        name:
          type: string
          description: 이름
        major:
          type: string
          description: 전공
        studentId:
          type: string
          description: 학번
        password:
          type: string
          description: 비밀번호
        birthday:
          type: string
          description: 생년월일
        academicStatus:
          type: string
          description: 학적상태
          enum:
            - TAKE_OFF
            - ATTENDING
      required:
        - email
        - name
        - major
        - studentId
        - password
        - birthday
        - academicStatus
    User:
      title: User
      type: object
      properties:
        email:
          type: string
          description: 이메일
        name:
          type: string
          description: 이름
        major:
          type: string
          description: 전공
        studentId:
          type: string
          description: 학번
        birthday:
          type: string
          description: 생년월일
        academicStatus:
          type: string
          description: 학적상태
          enum:
            - TAKE_OFF
            - ATTENDING
      required:
        - email
        - name
        - major
        - studentId
        - birthday
        - academicStatus
    LoginResponse:
      title: LoginResponse
      type: object
      properties:
        accessToken:
          type: string
          description: 액세스 토큰
        refreshToken:
          type: string
          description: 리프레시 토큰
        user:
          $ref: '#/components/schemas/UserNameAndId'
        shouldChangePassword:
          type: boolean
          description: 비밀번호 변경해야 하는지 여부
      required:
        - accessToken
        - refreshToken
        - user
        - shouldChangePassword
    UserNameAndId:
      title: UserNameAndId
      type: object
      properties:
        id:
          description: 사용자 id
          type: integer
        name:
          type: string
          description: 이름
      required:
        - id
        - name
    StudyOverview:
      title: StudyOverview
      type: object
      properties:
        id:
          type: integer
          description: 스터디 id
        title:
          type: string
          description: 제목
        goal:
          type: string
          description: 설명
        capacity:
          type: integer
          description: 인원
        ranking:
          type: integer
          description: 랭킹
        category:
          type: string
          description: |-
            태그

            LANGUAGE 외국어

            IT IT/컴퓨터

            NATIONAL_EXAM 고시/공무원

            CERTIFICATE 자격증

            ENTRANCE_EXAM 입시

            EMPLOYMENT 취업

            OTHER 기타
          enum:
            - LANGUAGE
            - IT
            - NATIONAL_EXAM
            - CERTIFICATE
            - ENTRANCE_EXAM
            - EMPLOYMENT
            - OTHER
        hashTags:
          type: array
          description: 해시태그 목록
          items:
            type: string
        notificationSchedules:
          type: array
          items:
            $ref: '#/components/schemas/StudyNotificationSchedule'
      required:
        - id
        - title
        - goal
        - capacity
        - ranking
        - category
        - hashTags
        - notificationSchedules
    QuestionOverview:
      title: QuestionOverview
      type: object
      properties:
        id:
          type: integer
          description: 질문 id
        title:
          type: string
          description: 질문 제목
        content:
          type: string
          description: 질문 내용
        writer:
          $ref: '#/components/schemas/UserNameAndId'
        createdAt:
          type: string
          format: date
          description: 작성자 정보
        countLike:
          type: integer
          description: 좋아요 수
        countComment:
          type: integer
          description: 댓글 수
      required:
        - id
        - title
        - content
        - writer
        - createdAt
        - countLike
        - countComment
    CreateStudyRequest:
      title: CreateStudyRequest
      type: object
      properties:
        title:
          type: string
          description: 제목
        capacity:
          type: integer
          description: 최대인원
        category:
          type: string
          description: |-
            스터디 종류 LANGUAGE 어학

            IT IT/컴퓨터

            NATIONAL_EXAM 고시/공무원

            CERTIFICATE 자격증

            ENTRANCE_EXAM 입시

            EMPLOYMENT 취업

            OTHER 기타
          enum:
            - LANGUAGE
            - IT
            - NATIONAL_EXAM
            - CERTIFICATE
            - ENTRANCE_EXAM
            - EMPLOYMENT
            - OTHER
        goal:
          type: string
          description: 스터디 목표
        rule:
          type: string
          description: 스터디 규칙
        hashtags:
          type: string
          description: |-
            해시태그

            아래와 같이 여러 해시태그를 문자열로 보내주시면 됩니다

            `#태그1 #태그2#태그3 #태그4#태그5#태그6`
        notificationSchedules:
          type: array
          description: 스터디 일정
          items:
            $ref: '#/components/schemas/StudyNotificationSchedule'
      required:
        - title
        - capacity
        - category
        - goal
        - rule
        - hashtags
        - notificationSchedules
    CreateQuestionRequest:
      title: CreateQuestionRequest
      type: object
      properties:
        title:
          type: string
          description: 제목
        content:
          type: string
          description: 내용
      required:
        - title
        - content
    RegenerateTokenRequest:
      title: RegenerateTokenRequest
      type: object
      properties:
        refreshToken:
          type: string
          description: 리프레시 토큰
      required:
        - refreshToken
    AccessToken:
      title: AccessToken
      type: object
      properties:
        accessToken:
          type: string
          description: 액세스 토큰
      required:
        - accessToken
    UserStudyOverview:
      title: UserStudyOverview
      type: object
      properties:
        id:
          type: integer
          description: 스터디 id
        title:
          type: string
          description: 스터디 제목
        studyRanking:
          type: integer
          description: 스터디 랭킹
        userRankingInStudy:
          type: integer
          description: 스터디 내에서 사용자 랭킹
        studyTimeInSecond:
          type: integer
          description: 사용자가 공부한 시간 (초단위)
        tag:
          type: string
          description: |-
            태그

            LANGUAGE 외국어

            IT IT/컴퓨터

            NATIONAL_EXAM 고시/공무원

            CERTIFICATE 자격증

            ENTRANCE_EXAM 입시

            EMPLOYMENT 취업

            OTHER 기타
          enum:
            - LANGUAGE
            - IT
            - NATIONAL_EXAM
            - CERTIFICATE
            - ENTRANCE_EXAM
            - EMPLOYMENT
            - OTHER
      required:
        - id
        - title
        - studyRanking
        - userRankingInStudy
        - studyTimeInSecond
        - tag
    BarGraphData:
      title: BarGraphData
      type: object
      properties:
        xAxis:
          type: string
          description: x축 데이터 (날짜)
        yAxis:
          description: y축 데이터 (스터디 시간 정수형으로 표현한 값)
          type: integer
      required:
        - xAxis
        - yAxis
    FindEmailRequest:
      title: FindEmailRequest
      type: object
      properties:
        name:
          type: string
          description: 이름
        studentId:
          type: string
          description: 학번
      required:
        - name
        - studentId
    UserEmail:
      title: UserEmail
      type: object
      properties:
        email:
          type: string
          description: 이메일
          format: email
      required:
        - email
      x-examples: {}
    FindPasswordRequest:
      title: FindPasswordRequest
      type: object
      properties:
        name:
          type: string
          description: 이름
        email:
          type: string
          description: 이메일
          format: email
      required:
        - name
        - email
    UserEmailAndName:
      title: UserEmailAndName
      type: object
      properties:
        name:
          type: string
          description: 이름
        email:
          type: string
          format: email
          description: 이메일
      required:
        - name
        - email
    UpdatePasswordRequest:
      title: UpdatePasswordRequest
      type: object
      properties:
        newPassword:
          type: string
          description: 새 비밀번호
      required:
        - newPassword
    StudyNotificationSchedule:
      title: StudyNotificationSchedule
      type: object
      properties:
        day:
          type: string
          description: 요일
          enum:
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
            - SUN
        at:
          type: string
          description: 시작시간
          format: time
      required:
        - day
        - at
    StudyParticipateRequest:
      title: StudyParticipateRequest
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        studyId:
          type: string
          description: 스터디 id
        status:
          type: string
          enum:
            - PENDING
            - ACCEPTED
            - REJECTED
          description: |-
            신청 상태

            대기: PENDING
            수락: ACCEPTED
            거절: REJECTEd
        createdAt:
          type: string
          description: 신청일자
      required:
        - user
        - studyId
        - status
        - createdAt
    SendEmailCodeRequest:
      title: SendEmailCodeRequest
      type: object
      properties:
        email:
          type: string
      required:
        - email
    VerifyEmailCodeRequest:
      title: VerifyEmailCodeRequest
      type: object
      properties:
        code:
          type: string
        email:
          type: string
      required:
        - code
        - email
    UpdateUserRequest:
      title: UpdateUserRequest
      type: object
      properties:
        email:
          type: string
        newPassword:
          type: string
        originalPassword:
          type: string
    UserIdAndStudyId:
      title: UserIdAndStudyId
      type: object
      properties:
        userId:
          type: number
        studyId:
          type: number
      required:
        - userId
        - studyId
    File:
      title: File
      type: object
      properties:
        id:
          type: integer
          description: 파일 id
        url:
          type: string
          description: 파일 주소
        originalName:
          type: string
          description: 원본 이름
      required:
        - id
        - url
        - originalName
  responses: {}
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: '`Bearer ${accessToken}` 형식으로 설정해주세요'
